name: Add New Tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1"

jobs:
  add-tests:
    name: Add new tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'DioxusLabs/Taffy'
          ref: 'refs/heads/main'
          path: 'taffy'
          sparse-checkout: |
            test_fixtures
          persist-credentials: false

      - uses: actions/checkout@v4
        with:
          ref: 'refs/heads/main'
          path: 'stretchable'
          sparse-checkout: |
            tests/fixtures

      - run: |
          # Create branch
          $branch = "tests/add-tests-${{ github.run_attempt }}"
          git checkout -b $($branch)

          $files = 0
          $targetBasePath = "tests/fixtures"
          $stylesheet = get-item "./tests/fixtures/base_style.css"
          foreach ($item in Get-ChildItem -Path "../taffy/test_fixtures" -Recurse -Filter *.html)
          {
            if ($item.BaseName.StartsWith("x")) {
              continue;
            }
            
            $relPath = ($item | Resolve-Path -RelativeBasePath "../taffy/test_fixtures" -Relative).TrimStart("./")
            $targetPath = Join-Path $targetBasePath $relPath
            if (Test-Path $targetPath) {
              continue;
            }            

            # Process source file and write processed file at target path
            # - Remove <script> block
            # - Fix path to stylesheet
            $processed = @()
            $has_style = $false
            $stylesheet_link = ($stylesheet | Resolve-Path -RelativeBasePath $targetPath.Directory -Relative)
            foreach($line in Get-Content $item) {
              if ($line -match '<script.*>.*<\/script>') {
                  continue
              }
          
              if ($line -match '<link.*>') {
                  if ($has_style) {
                      continue
                  }
                  $line = "  <link rel=""stylesheet"" type=""text/css"" href=""$stylesheet_rel"">"
                  $has_style = $true
              }
          
              $processed += $line
            }            
            if ($has_style) {
                Out-File -FilePath $targetPath -InputObject $processed -encoding utf8
            }

            $files++;
          }

          if ($files -gt 0) {
            # Configure git
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions@users.noreply.github.com'

            # Commit files
            git add .
            git commit -m "test(layout): add $($files) new tests from Taffy repo"

            # Push to origin and create PR
            git push -u origin $($branch)
            gh pr create --head $($branch) --base refs/heads/main --title "Add $($files) new tests from Taffy" --body "Add $($files) new tests from Taffy" --reviewer mortencombat
          }

        shell: pwsh
        working-directory: 'stretchable'
        env:
          GH_TOKEN: ${{ github.token }}
