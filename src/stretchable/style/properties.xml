<?xml version="1.0" encoding="UTF-8"?>
<props>
    <margin type="length|percentage|auto" initial="0">
        <margin-top />
        <margin-right />
        <margin-bottom />
        <margin-left />
    </margin>
    <padding type="length|percentage" initial="0">
        <padding-top />
        <padding-right />
        <padding-bottom />
        <padding-left />
    </padding>
    <border>
        <border-width type="keyword|length" keywords="stretchable.style.BorderWidth" initial="medium">
            <border-top-width />
            <border-right-width />
            <border-bottom-width />
            <border-left-width />
        </border-width>
        <border-style type="keyword" keywords="stretchable.style.BorderStyle" initial="none">
            <border-top-style />
            <border-right-style />
            <border-bottom-style />
            <border-left-style />
        </border-style>
        <border-color type="color" initial="currentcolor">
            <border-top-color />
            <border-right-color />
            <border-bottom-color />
            <border-left-color />
        </border-color>
    </border>
    <background-color type="color" initial="transparent" />
    <gap type="keyword|length|percentage" keywords="normal" initial="normal">
        <column-gap />
        <row-gap default="column-gap" />
    </gap>
    <overflow type="keyword" keywords="stretchable.style.Overflow" initial="visible">
        <overflow-x />
        <overflow-y default="overflow-x" />
    </overflow>
    <flex>
        <flex-grow type="number" initial="0" />
        <flex-shrink type="number" initial="1" />
        <flex-basis type="keyword|length|auto" keywords="max-content, min-content, fit-content" initial="auto" />
    </flex>
    <flex-direction type="keyword" keywords="stretchable.style.FlexDirection" initial="row" />
    <flex-wrap type="keyword" keywords="stretchable.style.FlexWrap" initial="nowrap" />
    <!-- NOTE: grid shorthand is not currently supported -->
    <grid-auto-columns type="keyword|length|percentage|function|auto" keywords="min-content, max-content" functions="minmax, fit-content" multiple="true" />
    <grid-auto-flow type="keyword" keywords="row, column, dense, row dense, column dense" initial="row" />
    <grid-auto-rows type="keyword|length|percentage|function|auto" keywords="min-content, max-content" functions="minmax, fit-content" multiple="true" />
    <!-- <grid-template-areas /> -->
    <grid-template-columns type="keyword|length|function" keywords="none, subgrid, masonry" functions="minmax, fit-content, repeat" multiple="true" />
    <grid-template-rows type="keyword|length|function" keywords="none, subgrid, masonry" functions="minmax, fit-content, repeat" multiple="true" />
    <aspect-ratio type="ratio" initial="auto" />
    <scrollbar-width type="length|keyword" keywords="stretchable.style.ScrollbarWidth" initial="auto" />
    <position type="keyword" keywords="stretchable.style.Position" initial="relative" />
    <inset type="length|percentage|auto" inactive="true" initial="auto">
        <top />
        <right />
        <bottom />
        <left />
    </inset>
    <display type="keyword" keywords="stretchable.style.Display" initial="flex" />
    <box-sizing type="keyword" keywords="stretchable.style.BoxSizing" initial="border-box" />
    <justify-items type="keyword" keywords="stretchable.style.JustifyItems" />
    <align-items type="keyword" keywords="stretchable.style.AlignItems" />
    <justify-content type="keyword" keywords="stretchable.style.JustifyContent" />
    <align-content type="keyword" keywords="stretchable.style.AlignContent" />
    <justify-self type="keyword" keywords="stretchable.style.JustifySelf" />
    <align-self type="keyword" keywords="stretchable.style.AlignSelf" />
    <!-- <grid-row type="grid-line" initial="auto">
        <grid-row-start />
        <grid-row-end />
    </grid-row>
    <grid-column type="grid-line" initial="auto">
        <grid-column-start />
        <grid-column-end />
    </grid-column> -->
</props>

<!-- 

How to handle 1-4 value and 1-2 value shorthands? 
Consider that grid-auto-flow can have two IdentToken corresponding to a single keyword value.
Functions should be predefined:
    minmax(min, max): 
        min: length|percentage|auto|min-content|max-content
        max: length|percentage|auto|min-content|max-content
    fit-content(length|percentage)
    repeat(count, tracks)

How to handle gracefully fx grid-template-areas which is not supported?

-->